name: Terraform
on:
  pull_request:
    
jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      stacks: ${{ steps.stacks.outputs.stacks }}
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code
    - name: list stacks
      id: stacks
      run: |
        git fetch origin
        all=$(git diff origin/main --name-only | grep -v stacks/projects | wc -l)
        if [[ $all != "0" ]]; then
          echo "all" >> $GITHUB_STEP_SUMMARY
          stacks=$(ls stacks/projects | cut -f1 -d "." | jq -R -s -c 'split("\n")[:-1]')
        else
          stacks=$(git diff origin/main --name-only | grep stacks/projects | cut -f3 -d"/" | jq -R -s -c 'split("\n")[:-1]')
          echo "projects" >> $GITHUB_STEP_SUMMARY
        fi
        echo "stacks=$(jq -cn --argjson stack "$stacks" '{target: $stack}')" >> $GITHUB_OUTPUT
        echo "stacks=$(jq -cn --argjson stack "$stacks" '{target: $stack}')" >> $GITHUB_STEP_SUMMARY
  # TODO: Makefile
  # setup-env:
  #   needs: setup
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
  #   steps:
  #   - name: setup envs
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #     run: | 
  #       gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/DominikSchorn/atmos-test/environments/${{matrix.target}}
  terraform:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
    uses: ./.github/workflows/terraform-ci.yml
    with:
      target: ${{matrix.target}}
    secrets: inherit
  apply-all:
    needs: setup
    runs-on: ubuntu-20.04
    environment: all
    steps:
    - name: get deployment ids
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        env_ids=$(for i in $(jq .target <<< '${{ needs.setup.outputs.stacks}}' | tr -d "[" | tr -d '"' | tr -d "]" | tr -d ","); do gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${{ github.repository }}/environments/$i | jq .id; done)
        echo $env_ids >> $GITHUB_STEP_SUMMARY
        for id in $env_ids; do gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments -F "environment_ids[]=$id" -f "state=approved" -f "comment=Ship it!"; done
