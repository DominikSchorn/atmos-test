name: Terraform
on:
  pull_request:
    
jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      stacks: ${{ steps.stacks.outputs.stacks }}
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code
    # - uses: hashicorp/setup-terraform@v3
    # - name: terraform init
    #   run: terraform init
    # - name: terraform apply
    #   run: terraform apply -auto-approve
    #   env:
    #     TF_VAR_token: ${{ secrets.GH_TOKEN }}
    #     TF_VAR_org: ${{ secrets.GH_ORG }}
    # - name: Setup Atmos
    #   uses: cloudposse/github-action-setup-atmos@v2
    - name: list stacks
      id: stacks
      run: |
        stacks=$(ls stacks/projects | cut -f1 -d "." | jq -R -s -c 'split("\n")[:-1]')
        # ToDo: Checken warum das nicht klappt
        #stacks=$(atmos list stacks  | jq -R -s -c 'split("\n")[:-1]')
        echo "stacks=$(jq -cn --argjson stack "$stacks" '{target: $stack}')" >> $GITHUB_OUTPUT
  setup-env:
    needs: setup
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
    steps:
    - name: setup envs
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: | 
        gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/DominikSchorn/atmos-test/environments/${{matrix.target}}
        
  plan:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
    uses: ./.github/workflows/terraform-ci.yml
    with:
      target: ${{matrix.target}}
    # If you might want to use a secret in the build or test job then you would need to pass secrets, inherit disables secret isolation
    secrets: inherit
