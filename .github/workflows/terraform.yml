name: Terraform
on:
  pull_request:
    
jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      stacks: ${{ steps.stacks.outputs.stacks }}
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code
    - name: list stacks
      id: stacks
      run: |
        git fetch origin
        all=$(git diff origin/main --name-only | grep -v stacks/projects | wc -l)
        if [[ $all != "0" ]]; then
          echo "all" >> $GITHUB_STEP_SUMMARY
          stacks=$(ls stacks/projects | cut -f1 -d "." | jq -R -s -c 'split("\n")[:-1]')
        else
          stacks=$(git diff origin/main --name-only | grep stacks/projects | cut -f3 -d"/" | jq -R -s -c 'split("\n")[:-1]')
          echo "projects" >> $GITHUB_STEP_SUMMARY
        fi
        echo "stacks=$(jq -cn --argjson stack "$stacks" '{target: $stack}')" >> $GITHUB_OUTPUT
        echo "stacks=$(jq -cn --argjson stack "$stacks" '{target: $stack}')" >> $GITHUB_STEP_SUMMARY
  setup-env:
    needs: setup
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
    steps:
    - name: setup envs
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: | 
        gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/DominikSchorn/atmos-test/environments/${{matrix.target}}
  # dispatch:
  #   needs: setup
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
  #   steps:
  #   - uses: actions/checkout@v3
  #     name: Checkout source code
  #   - name: dispatch
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #     run: |
  #         gh workflow run .github/workflows/dispatch.yml -f target=${{matrix.target}} --ref foo
  plan:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.stacks) }}
    uses: ./.github/workflows/terraform-ci.yml
    with:
      target: ${{matrix.target}}
    secrets: inherit
